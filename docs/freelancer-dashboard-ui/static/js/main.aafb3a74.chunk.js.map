{"version":3,"sources":["components/AppContainer.tsx","components/Icons.tsx","components/Typography.tsx","components/TopNav.tsx","components/User.tsx","components/Profile.tsx","components/Header.tsx","components/Button.tsx","components/Search.tsx","components/Container.tsx","components/Card.tsx","components/TaskStatus.tsx","components/Projects.tsx","components/Grid.tsx","components/Clients.tsx","components/Bids.tsx","components/Invoice.tsx","components/CreateTask.tsx","components/App.tsx","index.tsx"],"names":["AppContainer","styled","div","AppContent","Icon","svg","attrs","xmlns","IconButton","p","active","darken","ArrowIcon","props","d","width","height","viewBox","ViewIcon","RemoveIcon","PauseIcon","rx","x","MessageIcon","ChevronIcon","DashboardIcon","y","ProjectsIcon","ClientsIcon","TaskIcon","fill","BidsIcon","EmailIcon","NotificationIcon","fillRule","clipRule","SearchIcon","LocationIcon","HamburderIcon","CloseIcon","Heading","size","css","getHeadingSize","Link","a","Text","TextEllipsis","TopNavItem","TopNavList","NavMenu","MenuToggleButton","MenuCloseButton","TopNav","useState","setActive","onClick","href","UserAvatar","img","UserName","UserEmail","User","ProfileButton","hasNotice","ProfileArrowDown","ProfileName","ProfileWrapper","Profile","src","Header","Button","button","color","backgroundColor","SearchInput","input","SearchBlock","LocationBlock","SearchComponent","SearchBlockDelimiter","LocationButtonComponent","LocationButton","Search","placeholder","Container","CardHeader","CardBody","Card","projectStatusColor","pending","done","TaskStatus","status","ProjectText","ProjectName","ProjectTask","ProjectStatus","ProjectAction","ProjectsHeader","ProjectsList","Project","ProjectsInfo","projectInfoItemColor","all","completed","ProjectsInfoItemWrapper","ProjectsInfoItem","type","rgba","ProjectsInfoItemCount","Projects","Grid","columns","rows","Client","ClientsList","Clients","BidTitle","BidStatus","BidAction","Bid","BidsList","Bids","InvoiceSwitchComponent","InvoiceSwitchIcon","available","InvoiceSwitchIconLeft","InvoiceSwitchIconRight","InvoiceSwitch","InvoiceTitle","InvoiceText","InvoiceRow","InvoiceRowsList","InvoiceButton","Invoice","CreateTaskBody","CreateTaskTitle","CreateTaskImage","CreateTaskButton","CreateTask","GlobalStyle","createGlobalStyle","AppComponent","ContentGrid","AdditionalGrid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aafb3a74.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const AppContainer = styled.div`\r\n  position: relative;\r\n  background: #eceef3;\r\n  margin: 145px auto;\r\n  max-width: 1440px;\r\n  box-shadow: 0px 100px 140px rgba(0, 0, 0, 0.46);\r\n  overflow-y: auto;\r\n\r\n  @media (max-width: 1439px) {\r\n    margin: 30px 15px;\r\n  }\r\n\r\n  @media (max-width: 1099px) {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const AppContent = styled.div`\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  margin: 40px 70px 35px 70px;\r\n\r\n  @media (max-width: 1439px) {\r\n    margin: 40px 30px 35px 30px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    margin: 40px 15px 35px 15px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { darken } from \"polished\";\r\n\r\ninterface IIconProps {\r\n  active?: boolean;\r\n}\r\n\r\nexport const Icon = styled.svg.attrs({\r\n  xmlns: \"http://www.w3.org/2000/svg\",\r\n})<IIconProps>`\r\n  fill: #bbd0e2;\r\n`;\r\n\r\ninterface IIconButtonProps {\r\n  active?: boolean;\r\n}\r\n\r\nexport const IconButton = styled.div<IIconButtonProps>`\r\n  ${Icon} {\r\n    fill: ${p => (p.active ? \"#0187E0\" : \"#BBD0E2\")};\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n\r\n    ${Icon} {\r\n      fill: ${p => darken(0.1, p.active ? \"#0187E0\" : \"#BBD0E2\")};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ArrowIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path d=\"M11.0556 4.9979L2.72222 0.245798C2.16667 -0.0819328 1.47222 -0.0819328 0.916667 0.245798C0.361111 0.573529 0 1.14706 0 1.77521V11.2248C0 11.8529 0.333333 12.4265 0.916667 12.7542C1.19444 12.9181 1.5 13 1.83333 13C2.16667 13 2.44444 12.9181 2.75 12.7542L11.0833 8.02941C11.6389 7.70168 12 7.12815 12 6.5C11.9444 5.87185 11.6111 5.29832 11.0556 4.9979Z\" />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"12\",\r\n  height: \"13\",\r\n  viewBox: \"0 0 12 13\",\r\n})``;\r\n\r\nexport const ViewIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path d=\"M16.2218 5.94043C12.5062 -1.98014 3.80622 -1.98014 0.0724995 5.94043C0.0724995 5.94043 0 6.10355 0 6.39355C0 6.61105 0.0724995 6.73792 0.0724995 6.73792C3.80622 14.6585 12.5062 14.6585 16.2218 6.73792C16.2218 6.73792 16.2943 6.55667 16.3124 6.33917C16.3124 6.12167 16.2218 5.94043 16.2218 5.94043ZM8.15619 10.7798C5.65496 10.7798 3.62497 8.74978 3.62497 6.24855C3.62497 3.74732 5.65496 1.71733 8.15619 1.71733C10.6574 1.71733 12.6874 3.74732 12.6874 6.24855C12.6874 8.74978 10.6574 10.7798 8.15619 10.7798Z\" />\r\n    <path d=\"M8.15617 3.69299C6.65181 3.69299 5.43744 4.90736 5.43744 6.3936C5.43744 7.87984 6.65181 9.0942 8.15617 9.0942C9.66053 9.0942 10.8749 7.87984 10.8749 6.3936C10.8749 4.90736 9.66053 3.69299 8.15617 3.69299Z\" />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"17\",\r\n  height: \"13\",\r\n  viewBox: \"0 0 17 13\",\r\n})``;\r\n\r\nexport const RemoveIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path d=\"M10.2143 13.3571V3.14282H0.785706V13.3571C0.785706 14.2214 1.49285 14.9285 2.35713 14.9285H8.64285C9.50713 14.9285 10.2143 14.2214 10.2143 13.3571Z\" />\r\n    <path d=\"M9.42861 2.35714L7.07147 0H3.92862L1.57147 2.35714H9.42861Z\" />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"11\",\r\n  height: \"15\",\r\n  viewBox: \"0 0 11 15\",\r\n})``;\r\n\r\nexport const PauseIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <rect width=\"3\" height=\"12\" rx=\"1.5\" />\r\n    <rect x=\"7\" width=\"3\" height=\"12\" rx=\"1.5\" />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"12\",\r\n  height: \"12\",\r\n  viewBox: \"0 0 10 12\",\r\n})``;\r\n\r\nexport const MessageIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path d=\"M9.5 22C14.6447 21.879 19 15.2533 19 9.87702C19.0004 7.92387 18.4436 6.01446 17.4 4.39026C16.3564 2.76607 14.8728 1.50005 13.137 0.752311C11.4011 0.00457279 9.4909 -0.191295 7.64794 0.189478C5.80498 0.570251 4.11205 1.51056 2.78324 2.89149C1.45443 4.27242 0.54943 6.03194 0.182699 7.94753C-0.184032 9.86311 0.00397584 11.8487 0.722946 13.6532C1.44192 15.4577 2.65955 17.0001 4.22187 18.0853C5.78418 19.1704 7.62099 19.7496 9.5 19.7496C9.53598 19.7496 9.51905 20.315 9.5 20.8803V22ZM13.8024 9.07629C14.0429 9.07716 14.2777 9.15209 14.4773 9.2916C14.6769 9.43111 14.8322 9.62896 14.9236 9.86016C15.0151 10.0914 15.0386 10.3455 14.9911 10.5906C14.9437 10.8357 14.8275 11.0607 14.6571 11.2371C14.4868 11.4136 14.27 11.5336 14.034 11.582C13.7981 11.6305 13.5536 11.6052 13.3315 11.5093C13.1094 11.4135 12.9196 11.2513 12.7861 11.0434C12.6526 10.8355 12.5813 10.5911 12.5813 10.3412C12.5807 10.1745 12.612 10.0094 12.6732 9.85541C12.7344 9.7014 12.8244 9.56153 12.938 9.4439C13.0515 9.32627 13.1864 9.23322 13.3348 9.17012C13.4832 9.10702 13.6421 9.07513 13.8024 9.07629ZM5.20818 11.6038C4.96644 11.6056 4.72968 11.5324 4.5281 11.3937C4.32652 11.255 4.16926 11.057 4.07638 10.825C3.98349 10.593 3.95919 10.3375 4.00657 10.0911C4.05395 9.84468 4.17087 9.61852 4.34241 9.44146C4.51395 9.2644 4.73234 9.14446 4.96973 9.09694C5.20711 9.04943 5.45274 9.07648 5.67527 9.17466C5.8978 9.27284 6.08716 9.4377 6.21919 9.6482C6.35122 9.8587 6.41993 10.1053 6.41658 10.3566C6.41324 10.6878 6.28459 11.0044 6.05845 11.2378C5.83231 11.4712 5.52687 11.6027 5.20818 11.6038ZM9.4873 11.6038C9.247 11.6017 9.0127 11.5256 8.81394 11.3852C8.61518 11.2448 8.46086 11.0464 8.37044 10.8149C8.28003 10.5835 8.25756 10.3294 8.30587 10.0847C8.35418 9.84003 8.47111 9.61569 8.64192 9.43998C8.81273 9.26427 9.02976 9.14506 9.26565 9.09739C9.50155 9.04972 9.74574 9.07572 9.96744 9.1721C10.1891 9.26849 10.3784 9.43095 10.5114 9.639C10.6444 9.84705 10.7152 10.0914 10.7147 10.3412C10.7114 10.6775 10.5807 10.9988 10.3509 11.2356C10.1211 11.4724 9.81085 11.6055 9.4873 11.606V11.6038Z\" />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"19\",\r\n  height: \"22\",\r\n  viewBox: \"0 0 19 22\",\r\n})``;\r\n\r\nexport const ChevronIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path d=\"M8.39071 0.0295097L8.3394 14.5294L0.0265375 6.99996L8.39071 0.0295097Z\" />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"9\",\r\n  height: \"15\",\r\n  viewBox: \"0 0 9 15\",\r\n})``;\r\n\r\nexport const DashboardIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <rect x=\"12\" width=\"8\" height=\"8\" />\r\n    <rect width=\"8\" height=\"8\" />\r\n    <rect x=\"12\" y=\"12\" width=\"8\" height=\"8\" />\r\n    <rect y=\"12\" width=\"8\" height=\"8\" />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"20\",\r\n  height: \"20\",\r\n  viewBox: \"0 0 20 20\",\r\n})``;\r\n\r\nexport const ProjectsIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path d=\"M18.6289 1.77058H7.22524L6.20239 0.539811C5.91948 0.194332 5.4407 0 5.00544 0H1.34929C0.609358 0 0 0.604589 0 1.33873V14.6613C0 15.3954 0.609358 16 1.34929 16H18.6507C19.3906 16 20 15.3954 20 14.6613V3.10931C19.9782 2.37517 19.3689 1.77058 18.6289 1.77058Z\" />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"20\",\r\n  height: \"16\",\r\n  viewBox: \"0 0 20 16\",\r\n})``;\r\n\r\nexport const ClientsIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path d=\"M3.54023 4.08803C3.54151 3.27846 3.77483 2.48745 4.21071 1.81496C4.64659 1.14247 5.26546 0.618677 5.98913 0.309781C6.71279 0.000885802 7.50876 -0.079252 8.27646 0.0794951C9.04415 0.238242 9.74911 0.628749 10.3023 1.20167C10.8554 1.77459 11.2319 2.5042 11.3841 3.29831C11.5364 4.09242 11.4576 4.91539 11.1577 5.66321C10.8578 6.41103 10.3503 7.05014 9.69926 7.49978C9.04822 7.94941 8.28289 8.1894 7.5 8.1894C6.44921 8.18763 5.44204 7.75474 4.69963 6.98578C3.95721 6.21682 3.54023 5.17463 3.54023 4.08803ZM13.8588 12.9443C13.1609 11.8547 12.2176 10.9566 11.11 10.327C10.0024 9.69744 8.76365 9.35523 7.5 9.32978C6.23306 9.35201 4.99037 9.69269 3.87917 10.3224C2.76797 10.9521 1.82163 11.852 1.12181 12.9443C0.115743 14.4715 -0.23896 16.1054 0.160887 17.2057C0.934783 19.2664 4.45601 20 7.5 20C10.544 20 14.0652 19.2664 14.8391 17.2057C15.239 16.1054 14.8843 14.4715 13.8782 12.9443H13.8588Z\" />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"15\",\r\n  height: \"20\",\r\n  viewBox: \"0 0 15 20\",\r\n})``;\r\n\r\nexport const TaskIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path d=\"M15.34 0H3.65999C1.63999 0 -9.91821e-06 1.64 -9.91821e-06 3.66V15.34C-9.91821e-06 17.36 1.63999 19 3.65999 19H15.34C17.36 19 19 17.36 19 15.34V3.66C19 1.64 17.36 0 15.34 0Z\" />\r\n    <path\r\n      d=\"M13.26 6.31995C13.1 6.15995 12.86 6.15995 12.7 6.31995L8.46001 10.56L6.54001 8.63995C6.38001 8.47995 6.14001 8.47995 5.98001 8.63995L5.32001 9.29995C5.16001 9.45995 5.16001 9.69995 5.32001 9.85995L8.20001 12.74C8.36001 12.9 8.60001 12.9 8.76001 12.74L13.94 7.55995C14.1 7.39995 14.1 7.15995 13.94 6.99995L13.26 6.31995Z\"\r\n      fill=\"white\"\r\n    />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"19\",\r\n  height: \"19\",\r\n  viewBox: \"0 0 19 19\",\r\n})``;\r\n\r\nexport const BidsIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path d=\"M11.1626 17.6128C11.3496 17.6128 11.5288 17.6858 11.661 17.8159C11.7932 17.946 11.8674 18.1224 11.8674 18.3064C11.8674 18.4903 11.7932 18.6668 11.661 18.7968C11.5288 18.9269 11.3496 19 11.1626 19H1.76504C1.57811 19 1.39884 18.9269 1.26666 18.7968C1.13448 18.6668 1.06023 18.4903 1.06023 18.3064C1.06023 18.1224 1.13448 17.946 1.26666 17.8159C1.39884 17.6858 1.57811 17.6128 1.76504 17.6128H11.1626ZM18.9532 12.7912C18.9975 12.9412 19.0105 13.0985 18.9915 13.2536C18.9726 13.4087 18.922 13.5585 18.8428 13.6938L17.6902 15.6586C17.5869 15.8336 17.4388 15.979 17.2608 16.0803C17.0828 16.1816 16.8809 16.2353 16.6752 16.2362C16.452 16.2362 16.2303 16.1742 16.0409 16.0544L9.73607 12.1073L7.5361 15.857C7.32588 16.2149 6.97991 16.476 6.57419 16.583C6.16847 16.69 5.73619 16.6341 5.3723 16.4276L0.790986 13.8242C0.427641 13.6172 0.162585 13.2768 0.0539711 12.8777C-0.054643 12.4786 0.00205466 12.0533 0.211625 11.6953L6.61607 0.779202C6.71972 0.601764 6.8581 0.446318 7.0232 0.321862C7.1883 0.197405 7.37684 0.10641 7.57792 0.0541438C7.77864 0.00046676 7.98819 -0.0134805 8.19443 0.0131101C8.40067 0.0397007 8.5995 0.1063 8.7794 0.209051L13.3607 2.81196C13.541 2.91393 13.699 3.0501 13.8255 3.21258C13.9519 3.37506 14.0444 3.56062 14.0975 3.75851C14.1519 3.95605 14.166 4.16226 14.139 4.3652C14.112 4.56815 14.0444 4.76381 13.9401 4.94089L11.7401 8.69057L18.3677 12.0902C18.5081 12.1624 18.6322 12.2617 18.7327 12.3821C18.8332 12.5026 18.9085 12.6417 18.9532 12.7912Z\" />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"19\",\r\n  height: \"19\",\r\n  viewBox: \"0 0 19 19\",\r\n})``;\r\n\r\nexport const EmailIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path d=\"M20.2871 0H1.71346C0.771017 0 0 0.762587 0 1.69499V14.305C0 15.2369 0.771285 16 1.71346 16H20.2865C21.2292 16 22 15.2369 22 14.305V1.69473C22.0005 0.762587 21.2292 0 20.2871 0ZM19.3656 12.5776C19.6041 12.7997 19.6156 13.1709 19.3918 13.4074C19.2749 13.5307 19.1169 13.5926 18.9586 13.5926C18.8129 13.5926 18.6672 13.5398 18.5524 13.4331L13.6776 8.90852L11.5671 10.9437C11.4523 11.0551 11.3026 11.1106 11.1532 11.1106C11.0075 11.1106 10.8613 11.0578 10.7467 10.9514L8.33846 8.71562L3.45589 13.4254C3.3408 13.5371 3.19138 13.5926 3.04141 13.5926C2.88715 13.5926 2.7329 13.5326 2.61647 13.4151C2.38763 13.1826 2.39246 12.8114 2.6272 12.5851L7.47194 7.91164L2.63578 3.42209C2.39675 3.2 2.38468 2.82905 2.60896 2.59264C2.8335 2.35569 3.20881 2.34454 3.44785 2.5661L11.1454 9.71091L18.5444 2.57406C18.7786 2.34746 19.1547 2.35277 19.3838 2.58415C19.6124 2.81605 19.6075 3.18779 19.3728 3.41439L14.5286 8.08783L19.3656 12.5776Z\" />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"22\",\r\n  height: \"16\",\r\n  viewBox: \"0 0 22 16\",\r\n})``;\r\n\r\nexport const NotificationIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M8.15454 2.74611C4.90798 3.58133 2.50909 6.52729 2.50909 10.036V15.0538C2.50909 15.5161 2.13345 15.8909 1.6736 15.8909C0.749296 15.8909 0 16.6417 0 17.5636C0 18.4875 0.75024 19.2364 1.67686 19.2364H18.3959C19.322 19.2364 20.0727 18.4856 20.0727 17.5636C20.0727 16.6398 19.3199 15.8909 18.3991 15.8909C17.9377 15.8909 17.5636 15.519 17.5636 15.0538V10.036C17.5636 6.52868 15.1652 3.58161 11.9182 2.74614V1.88218C11.9182 0.840231 11.0757 0 10.0364 0C8.99918 0 8.15454 0.842679 8.15454 1.88218V2.74611ZM7.10909 20.0727H12.9636C12.9636 21.6894 11.6531 23 10.0364 23C8.41967 23 7.10909 21.6894 7.10909 20.0727Z\"\r\n    />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"21\",\r\n  height: \"23\",\r\n  viewBox: \"0 0 21 23\",\r\n})``;\r\n\r\nexport const SearchIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path d=\"M20.6517 19.0868L14.9216 13.3163L15.0348 13.1565C16.0394 11.7367 16.5705 10.0692 16.5705 8.33434C16.5708 3.7388 12.854 0 8.28527 0C3.71649 0 0 3.7388 0 8.33434C0 12.9299 3.71673 16.6687 8.28527 16.6687C10.0089 16.6687 11.6662 16.1348 13.0785 15.1242L13.2398 15.009L18.9713 20.781C19.1957 21.0067 19.4941 21.1311 19.8116 21.1311C20.1288 21.1311 20.4272 21.0067 20.6519 20.7808C21.1161 20.3138 21.1161 19.554 20.6517 19.0868ZM13.102 11.7703L12.5206 12.592L11.7038 13.1767C10.6956 13.8979 9.51369 14.2792 8.2855 14.2792C5.02545 14.2792 2.37326 11.6125 2.37326 8.33434C2.37326 5.0562 5.02545 2.38946 8.2855 2.38946C11.5456 2.38946 14.1978 5.0562 14.1978 8.33434C14.1975 9.56887 13.8188 10.7569 13.102 11.7703Z\" />\r\n    <path d=\"M8.94108 3.46802C6.09378 3.46802 3.77734 5.78469 3.77734 8.63222C3.77734 8.96422 4.04618 9.23329 4.37817 9.23329C4.71016 9.23329 4.979 8.96422 4.979 8.63222C4.979 6.4475 6.75636 4.67014 8.94108 4.67014C9.27307 4.67014 9.54191 4.40107 9.54191 4.06908C9.54191 3.73709 9.27307 3.46802 8.94108 3.46802Z\" />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"21\",\r\n  height: \"23\",\r\n  viewBox: \"0 0 21 23\",\r\n})``;\r\n\r\nexport const LocationIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M9 0C4.01489 0 0 4.10007 0 9.125C0 11.6298 1.00787 14.1694 2.54028 16.3778C4.07697 18.5924 6.18689 20.5423 8.5033 21.8679L9.00214 22.1534L9.49994 21.8661C11.7955 20.5409 13.9041 18.5923 15.4448 16.3791C16.981 14.1724 18 11.6322 18 9.125C18 4.10007 13.9851 0 9 0ZM2 9.125C2 5.1753 5.14856 2 9 2C12.8514 2 16 5.1753 16 9.125C16 11.1051 15.1844 13.2524 13.8033 15.2364C12.5397 17.0516 10.8422 18.6712 8.99786 19.8335C7.13977 18.6716 5.44275 17.0525 4.18341 15.2376C2.80792 13.2554 2 11.1075 2 9.125Z\"\r\n    />\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M9 12C10.6569 12 12 10.6569 12 9C12 7.34315 10.6569 6 9 6C7.34314 6 6 7.34315 6 9C6 10.6569 7.34314 12 9 12ZM10 9C10 9.55228 9.55231 10 9 10C8.44769 10 8 9.55228 8 9C8 8.44772 8.44769 8 9 8C9.55231 8 10 8.44772 10 9Z\"\r\n    />\r\n  </Icon>\r\n)).attrs({\r\n  width: \"18\",\r\n  height: \"23\",\r\n  viewBox: \"0 0 18 23\",\r\n})``;\r\n\r\nexport const HamburderIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path d=\"M 0 7.5 L 0 12.5 L 50 12.5 L 50 7.5 Z M 0 22.5 L 0 27.5 L 50 27.5 L 50 22.5 Z M 0 37.5 L 0 42.5 L 50 42.5 L 50 37.5 Z\"></path>\r\n  </Icon>\r\n)).attrs({\r\n  width: \"50\",\r\n  height: \"50\",\r\n  viewBox: \"0 0 50 50\",\r\n})``;\r\n\r\nexport const CloseIcon = styled(({ ...props }) => (\r\n  <Icon {...props}>\r\n    <path d=\"m386.667 45.564-45.564-45.564-147.77 147.769-147.769-147.769-45.564 45.564 147.769 147.769-147.769 147.77 45.564 45.564 147.769-147.769 147.769 147.769 45.564-45.564-147.768-147.77z\"></path>\r\n  </Icon>\r\n)).attrs({\r\n  width: \"386.667\",\r\n  height: \"386.667\",\r\n  viewBox: \"0 0 386.667 386.667\",\r\n})``;\r\n","import styled, { css } from \"styled-components\";\r\n\r\ntype HeadingSize = 1 | 2 | 3 | 4 | 5 | 6;\r\n\r\ninterface IHeadingProps {\r\n  size: HeadingSize;\r\n}\r\n\r\nconst getHeadingSize = (size: HeadingSize) => {\r\n  switch (size) {\r\n    case 1:\r\n      return css``;\r\n    case 2:\r\n      return css``;\r\n    case 3:\r\n      return css`\r\n        font-size: 18px;\r\n        line-height: 23px;\r\n      `;\r\n    case 4:\r\n      return css`\r\n        font-size: 16px;\r\n        line-height: 20px;\r\n      `;\r\n    case 5:\r\n      return css``;\r\n    case 6:\r\n      return css``;\r\n  }\r\n};\r\n\r\nexport const Heading = styled.div<IHeadingProps>`\r\n  color: #2a2a2a;\r\n  font-weight: bold;\r\n\r\n  ${p => getHeadingSize(p.size)}\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  color: #0187e0;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div``;\r\n\r\nexport const TextEllipsis = styled(Text)`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  min-width: 0;\r\n  white-space: nowrap;\r\n  max-width: 100%;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport {\r\n  DashboardIcon,\r\n  ProjectsIcon,\r\n  ClientsIcon,\r\n  TaskIcon,\r\n  BidsIcon,\r\n  Icon,\r\n  HamburderIcon,\r\n  IconButton,\r\n  CloseIcon,\r\n} from \"./Icons\";\r\nimport { Text } from \"./Typography\";\r\nimport { darken } from \"polished\";\r\n\r\ninterface ITopNavItemProps {\r\n  active?: boolean;\r\n}\r\n\r\nexport const TopNavItem = styled.a<ITopNavItemProps>`\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-columns: 20px 1fr;\r\n  grid-gap: 10px;\r\n  align-content: center;\r\n  align-items: center;\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  text-decoration: none;\r\n  color: ${p => (p.active ? \"#2a2a2a\" : \"#b6ccdf\")};\r\n  font-weight: ${p => (p.active ? \"bold\" : 600)};\r\n  height: 100%;\r\n\r\n  ${Icon} {\r\n    fill: ${p => (p.active ? \"#0187e0\" : \"#b6ccdf\")};\r\n  }\r\n\r\n  &:hover {\r\n    color: ${p => (p.active ? \"#2a2a2a\" : darken(0.1, \"#b6ccdf\"))};\r\n\r\n    ${Icon} {\r\n      fill: ${p => (p.active ? \"#0187e0\" : darken(0.1, \"#b6ccdf\"))};\r\n    }\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: ${p => (p.active ? \"block\" : \"none\")};\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 5px;\r\n    background: #0187e0;\r\n  }\r\n`;\r\n\r\ninterface ITopNavListProps {\r\n  active?: boolean;\r\n}\r\n\r\nexport const TopNavList = styled.div<ITopNavListProps>`\r\n  display: flex;\r\n  height: 100%;\r\n\r\n  ${TopNavItem} {\r\n    @media (min-width: 1440px) {\r\n      &:not(:last-child) {\r\n        margin-right: 60px;\r\n      }\r\n    }\r\n\r\n    @media (min-width: 1100px) {\r\n      &:not(:last-child) {\r\n        margin-right: 30px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 1099px) {\r\n      height: auto;\r\n      padding-bottom: 10px;\r\n      grid-template-columns: 30px 1fr;\r\n      grid-gap: 15px;\r\n      font-size: 20px;\r\n\r\n      ${Icon} {\r\n        height: 30px;\r\n        width: 30px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1099px) {\r\n    position: fixed;\r\n    z-index: 10;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #ffffff;\r\n    display: grid;\r\n    grid-gap: 30px;\r\n    align-content: center;\r\n    justify-content: center;\r\n    transition: ease transform 0.5s, ease opacity 0.5s, ease left 0s;\r\n    transition-delay: 0s, 0s, 0s;\r\n\r\n    ${p =>\r\n      p.active\r\n        ? css`\r\n            transform: scale(1);\r\n            opacity: 1;\r\n          `\r\n        : css`\r\n            left: -99999px;\r\n            transform: scale(0.8);\r\n            opacity: 0;\r\n            transition-delay: 0s, 0s, 0.5s;\r\n          `}\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const MenuToggleButton = styled(IconButton)`\r\n  ${Icon} {\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n\r\n  @media (min-width: 1100px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MenuCloseButton = styled(MenuToggleButton)`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 30px;\r\n`;\r\n\r\nexport const TopNav = styled(({ ...props }) => {\r\n  const [active, setActive] = useState(false);\r\n\r\n  return (\r\n    <NavMenu {...props}>\r\n      <MenuToggleButton\r\n        onClick={() => {\r\n          setActive(true);\r\n        }}\r\n      >\r\n        <HamburderIcon />\r\n      </MenuToggleButton>\r\n      <TopNavList active={active}>\r\n        <MenuCloseButton\r\n          onClick={() => {\r\n            setActive(false);\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </MenuCloseButton>\r\n        <TopNavItem active={true} href=\"./\">\r\n          <DashboardIcon />\r\n          <Text>Dashboard</Text>\r\n        </TopNavItem>\r\n        <TopNavItem href=\"./\">\r\n          <ProjectsIcon />\r\n          <Text>Projects</Text>\r\n        </TopNavItem>\r\n        <TopNavItem href=\"./\">\r\n          <ClientsIcon />\r\n          <Text>Clients</Text>\r\n        </TopNavItem>\r\n        <TopNavItem href=\"./\">\r\n          <TaskIcon />\r\n          <Text>Task</Text>\r\n        </TopNavItem>\r\n        <TopNavItem href=\"./\">\r\n          <BidsIcon />\r\n          <Text>Bids</Text>\r\n        </TopNavItem>\r\n      </TopNavList>\r\n    </NavMenu>\r\n  );\r\n})``;\r\n","import styled from \"styled-components\";\r\nimport { TextEllipsis } from \"./Typography\";\r\n\r\nexport const UserAvatar = styled.img`\r\n  width: 52px;\r\n  height: 52px;\r\n  background-blend-mode: normal;\r\n  border-radius: 10px;\r\n\r\n  @media (max-width: 1099px) {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 6px;\r\n  }\r\n`;\r\n\r\nexport const UserName = styled(TextEllipsis)`\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  color: #2a2a2a;\r\n\r\n  @media (max-width: 1099px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const UserEmail = styled(TextEllipsis)`\r\n  font-size: 14px;\r\n  color: rgba(42, 42, 42, 0.7);\r\n\r\n  @media (max-width: 1099px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 52px 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  grid-gap: 5px 10px;\r\n\r\n  ${UserAvatar} {\r\n    grid-row: 1 / span 2;\r\n    align-self: center;\r\n  }\r\n\r\n  ${UserName} {\r\n    grid-row-start: 1;\r\n    align-self: end;\r\n  }\r\n\r\n  ${UserEmail} {\r\n    grid-row-start: 2;\r\n    align-self: start;\r\n  }\r\n\r\n  @media (max-width: 1099px) {\r\n    grid-template-columns: 40px 1fr;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { User, UserAvatar, UserName, UserEmail } from \"./User\";\r\nimport { ChevronIcon, NotificationIcon, EmailIcon, Icon } from \"./Icons\";\r\nimport { darken } from \"polished\";\r\n\r\ninterface IProfileButtonProps {\r\n  hasNotice?: boolean;\r\n}\r\n\r\nexport const ProfileButton = styled.div<IProfileButtonProps>`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 52px;\r\n  height: 52px;\r\n  border: 1px solid #d3dde6;\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n\r\n  ${Icon} {\r\n    fill: #d3dde6;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    border: 1px solid ${darken(0.1, \"#d3dde6\")};\r\n\r\n    ${Icon} {\r\n      fill: ${darken(0.1, \"#d3dde6\")};\r\n    }\r\n  }\r\n\r\n  &:active {\r\n    border: 1px solid ${darken(0.2, \"#d3dde6\")};\r\n\r\n    ${Icon} {\r\n      fill: ${darken(0.2, \"#d3dde6\")};\r\n    }\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: ${p => (p.hasNotice ? \"block\" : \"none\")};\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 10px;\r\n    width: 4px;\r\n    height: 4px;\r\n    background: #ff1111;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  @media (max-width: 1099px) {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 6px;\r\n\r\n    &:after {\r\n      right: 5px;\r\n      top: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProfileArrowDown = styled(ChevronIcon)`\r\n  transform: translate(0, 2px) rotate(-90deg);\r\n  margin-left: 6px;\r\n  fill: #0187e0;\r\n`;\r\n\r\nexport const ProfileName = styled(UserName)`\r\n  font-weight: 800;\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  color: #0187e0;\r\n\r\n  &:hover {\r\n    ${ProfileArrowDown} {\r\n      fill: #0187e0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProfileWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 52px 52px 1fr;\r\n  grid-gap: 20px;\r\n  align-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n\r\n  @media (max-width: 1099px) {\r\n    grid-template-columns: 40px 40px 1fr;\r\n\r\n    ${ProfileName}, ${UserEmail} {\r\n      display: none;\r\n    }\r\n\r\n    ${User} {\r\n      grid-gap: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Profile = styled(({ ...props }) => (\r\n  <ProfileWrapper {...props}>\r\n    <ProfileButton hasNotice={true}>\r\n      <NotificationIcon />\r\n    </ProfileButton>\r\n    <ProfileButton>\r\n      <EmailIcon />\r\n    </ProfileButton>\r\n    <User>\r\n      <UserAvatar src=\"assets/images/avatars/avatar-4.png\" />\r\n      <ProfileName>\r\n        Alen Smith <ProfileArrowDown />\r\n      </ProfileName>\r\n      <UserEmail>alex@hotmail.com</UserEmail>\r\n    </User>\r\n  </ProfileWrapper>\r\n))``;\r\n","import styled from \"styled-components\";\r\nimport { TopNav } from \"./TopNav\";\r\nimport { Profile } from \"./Profile\";\r\n\r\nexport const Header = styled.div`\r\n  height: 100px;\r\n  background: #ffffff;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.04);\r\n  padding: 0 70px;\r\n  display: flex;\r\n\r\n  ${TopNav} {\r\n    margin-right: auto;\r\n  }\r\n\r\n  ${Profile} {\r\n    margin-left: 60px;\r\n  }\r\n\r\n  @media (max-width: 1439px) {\r\n    height: 80px;\r\n    padding: 0 30px;\r\n  }\r\n\r\n  @media (max-width: 1100px) {\r\n    height: 60px;\r\n    padding: 0 30px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 0 15px;\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport { darken } from \"polished\";\r\n\r\ninterface IButtonProps {\r\n  size: \"large\" | \"medium\" | \"small\";\r\n  color?: string;\r\n  backgroundColor?: string;\r\n}\r\n\r\nexport const Button = styled.button<IButtonProps>`\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 14px;\r\n  line-height: 1;\r\n  border: 0;\r\n  border-radius: 6px;\r\n  outline: none;\r\n  display: grid;\r\n  align-content: center;\r\n  color: ${p => (p.color ? p.color : \"default\")};\r\n  background: ${p => (p.backgroundColor ? p.backgroundColor : \"buttonface\")};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: ${p =>\r\n      p.backgroundColor ? darken(0.1, p.backgroundColor) : \"buttonface\"};\r\n  }\r\n\r\n  &:active {\r\n    background: ${p =>\r\n      p.backgroundColor ? darken(0.2, p.backgroundColor) : \"buttonface\"};\r\n  }\r\n\r\n  ${p =>\r\n    p.size === \"large\"\r\n      ? css`\r\n          height: 52px;\r\n          font-weight: bold;\r\n          font-size: 16px;\r\n          padding: 16px 55px;\r\n        `\r\n      : null}\r\n\r\n  ${p =>\r\n    p.size === \"medium\"\r\n      ? css`\r\n          font-size: 14px;\r\n          height: 40px;\r\n          padding: 10px 30px;\r\n        `\r\n      : null}\r\n\r\n  ${p =>\r\n    p.size === \"small\"\r\n      ? css`\r\n          height: 30px;\r\n          padding: 6px 23px;\r\n        `\r\n      : null}\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"./Button\";\r\nimport { SearchIcon, LocationIcon } from \"./Icons\";\r\nimport { TextEllipsis } from \"./Typography\";\r\nimport { darken } from \"polished\";\r\n\r\nconst SearchInput = styled.input`\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  color: #0187e0;\r\n  width: 100%;\r\n  height: 40px;\r\n  border: 0;\r\n  outline: 0;\r\n\r\n  &::placeholder {\r\n    color: #b6ccdf;\r\n  }\r\n`;\r\n\r\nexport const SearchBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LocationBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n\r\n    ${Button} {\r\n      margin-top: 30px;\r\n      width: 100%;\r\n      padding: 10px 55px;\r\n      height: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SearchComponent = styled.div`\r\n  height: 72px;\r\n  background: #ffffff;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 2px 1fr;\r\n  grid-gap: 25px;\r\n  align-items: center;\r\n\r\n  ${SearchIcon} {\r\n    margin-left: 15px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 10px;\r\n    height: auto;\r\n    padding: 30px 27px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 20px 15px;\r\n  }\r\n`;\r\n\r\nexport const SearchBlockDelimiter = styled.div`\r\n  height: 40px;\r\n  width: 2px;\r\n  background: #d8e1e9;\r\n\r\n  @media (max-width: 900px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const LocationButtonComponent = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 18px 1fr;\r\n  grid-gap: 10px;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  color: #b6ccdf;\r\n  margin-right: auto;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: ${darken(0.1, \"#b6ccdf\")};\r\n\r\n    ${LocationIcon} {\r\n      fill: ${darken(0.1, \"#b6ccdf\")};\r\n    }\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    margin-left: 15px;\r\n  }\r\n`;\r\n\r\nexport const LocationButton = styled(({ ...props }) => (\r\n  <LocationButtonComponent {...props}>\r\n    <LocationIcon />\r\n    <TextEllipsis>Choose Location</TextEllipsis>\r\n  </LocationButtonComponent>\r\n))``;\r\n\r\nexport const Search = styled(({ ...props }) => {\r\n  return (\r\n    <SearchComponent {...props}>\r\n      <SearchBlock>\r\n        <SearchIcon />\r\n        <SearchInput placeholder=\"Search Jobs\" />\r\n      </SearchBlock>\r\n      <SearchBlockDelimiter />\r\n      <LocationBlock>\r\n        <LocationButton />\r\n        <Button size=\"large\" color=\"white\" backgroundColor=\"#0187E0\">\r\n          Search\r\n        </Button>\r\n      </LocationBlock>\r\n    </SearchComponent>\r\n  );\r\n})``;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 30px 27px;\r\n  background: #ffffff;\r\n  border-radius: 10px;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 20px 15px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Container } from \"./Container\";\r\n\r\nexport const CardHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-right: 20px;\r\n\r\n  @media (max-width: 768px) {\r\n    padding-right: 15px;\r\n  }\r\n`;\r\n\r\nexport const CardBody = styled(Container)`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${CardHeader} {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  ${CardBody} {\r\n    flex: 1;\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport { TextEllipsis } from \"./Typography\";\r\n\r\ntype TProjectStatus = \"pending\" | \"done\" | \"active\";\r\n\r\ninterface IProjectStatusProps {\r\n  status?: TProjectStatus;\r\n}\r\n\r\nconst projectStatusColor = {\r\n  active: \"#0187e0\",\r\n  pending: \"#ff9838\",\r\n  done: \"#31ac4c\",\r\n};\r\n\r\nexport const TaskStatus = styled(TextEllipsis)<IProjectStatusProps>`\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: 600;\r\n  font-size: 13px;\r\n  line-height: 16px;\r\n\r\n  ${p =>\r\n    p.status\r\n      ? css`\r\n          &:before {\r\n            content: \"\";\r\n            display: inline-block;\r\n            width: 6px;\r\n            height: 6px;\r\n            border-radius: 50%;\r\n            background: ${p.status ? projectStatusColor[p.status] : \"#000000\"};\r\n            margin-right: 6px;\r\n          }\r\n        `\r\n      : null}\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { rgba } from \"polished\";\r\nimport { Card, CardHeader, CardBody } from \"./Card\";\r\nimport { Heading, Link, TextEllipsis } from \"./Typography\";\r\nimport {\r\n  ArrowIcon,\r\n  ViewIcon,\r\n  RemoveIcon,\r\n  PauseIcon,\r\n  IconButton,\r\n} from \"./Icons\";\r\nimport { TaskStatus } from \"./TaskStatus\";\r\n\r\nexport const ProjectText = styled(TextEllipsis)`\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  line-height: 16px;\r\n`;\r\n\r\nexport const ProjectName = styled(ProjectText)`\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const ProjectTask = styled(ProjectText)``;\r\n\r\nexport const ProjectStatus = styled(ProjectText)`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ProjectAction = styled(ProjectText)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n\r\n  ${IconButton} {\r\n    &:not(:first-child) {\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProjectsHeader = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 80px;\r\n  grid-gap: 6px;\r\n  padding: 0 40px 0 16px;\r\n  margin: 20px 0;\r\n\r\n  ${ProjectText} {\r\n    font-weight: bold;\r\n  }\r\n\r\n  ${ProjectAction} {\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ProjectsList = styled.div`\r\n  display: grid;\r\n  grid-gap: 6px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const Project = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 80px;\r\n  grid-gap: 6px;\r\n  align-content: center;\r\n  height: 49px;\r\n  border: 1px solid #d8e1e9;\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n  padding: 0 40px 0 16px;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 5px 10px;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n\r\n    ${ProjectName} {\r\n      grid-column: 1;\r\n      grid-row: 1;\r\n    }\r\n\r\n    ${ProjectTask} {\r\n      grid-column: 1;\r\n      grid-row: 2;\r\n    }\r\n\r\n    ${TaskStatus} {\r\n      grid-column: 2;\r\n      grid-row: 1;\r\n      justify-self: end;\r\n    }\r\n\r\n    ${ProjectAction} {\r\n      grid-column: 2;\r\n      grid-row: 2;\r\n      justify-self: end;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProjectsInfo = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gap: 30px;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 0;\r\n  }\r\n`;\r\n\r\ninterface IProjectsInfoItemProps {\r\n  type: \"all\" | \"completed\" | \"pending\";\r\n}\r\n\r\nconst projectInfoItemColor = {\r\n  all: \"#0187e0\",\r\n  completed: \"#31ac4c\",\r\n  pending: \"#ff9838\",\r\n};\r\n\r\nexport const ProjectsInfoItemWrapper = styled.div`\r\n  overflow: hidden;\r\n  margin-bottom: -48px;\r\n`;\r\n\r\nexport const ProjectsInfoItem = styled.div<IProjectsInfoItemProps>`\r\n  height: 100px;\r\n  border-radius: 10px;\r\n  padding: 12px;\r\n  color: #ffffff;\r\n  background: ${p => projectInfoItemColor[p.type]};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  position: relative;\r\n  margin-bottom: 58px;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 50%;\r\n    z-index: 0;\r\n    display: block;\r\n    height: 100%;\r\n    width: 50%;\r\n    transform: translate(-50%, 10px);\r\n    background: ${p => rgba(projectInfoItemColor[p.type], 0.4)};\r\n    border-radius: 10px;\r\n    filter: blur(24px);\r\n\r\n    @media (max-width: 768px) {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  * {\r\n    position: relative;\r\n    z-index: 1;\r\n  }\r\n\r\n  ${Heading} {\r\n    font-weight: 600;\r\n    font-size: 13px;\r\n    line-height: 16px;\r\n    color: #ffffff;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    height: auto;\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const ProjectsInfoItemCount = styled.div`\r\n  font-weight: bold;\r\n  font-size: 36px;\r\n  color: #ffffff;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const Projects = styled(({ ...props }) => {\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader>\r\n        <Heading size={3}>Projects</Heading>\r\n        <Link>Manage Projects</Link>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ProjectsInfo>\r\n          <ProjectsInfoItemWrapper>\r\n            <ProjectsInfoItem type=\"all\">\r\n              <Heading size={4}>All Projects</Heading>\r\n              <ProjectsInfoItemCount>06</ProjectsInfoItemCount>\r\n            </ProjectsInfoItem>\r\n          </ProjectsInfoItemWrapper>\r\n          <ProjectsInfoItemWrapper>\r\n            <ProjectsInfoItem type=\"completed\">\r\n              <Heading size={4}>Completed</Heading>\r\n              <ProjectsInfoItemCount>02</ProjectsInfoItemCount>\r\n            </ProjectsInfoItem>\r\n          </ProjectsInfoItemWrapper>\r\n          <ProjectsInfoItemWrapper>\r\n            <ProjectsInfoItem type=\"pending\">\r\n              <Heading size={4}>Pending</Heading>\r\n              <ProjectsInfoItemCount>04</ProjectsInfoItemCount>\r\n            </ProjectsInfoItem>\r\n          </ProjectsInfoItemWrapper>\r\n        </ProjectsInfo>\r\n        <ProjectsHeader>\r\n          <ProjectName>Project Name</ProjectName>\r\n          <ProjectTask>Task</ProjectTask>\r\n          <ProjectStatus>Status</ProjectStatus>\r\n          <ProjectAction>Action</ProjectAction>\r\n        </ProjectsHeader>\r\n        <ProjectsList>\r\n          <Project>\r\n            <ProjectName>Roseret</ProjectName>\r\n            <ProjectTask>Wireframing</ProjectTask>\r\n            <TaskStatus status=\"pending\">Pending</TaskStatus>\r\n            <ProjectAction>\r\n              <IconButton>\r\n                <ArrowIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <ViewIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <RemoveIcon />\r\n              </IconButton>\r\n            </ProjectAction>\r\n          </Project>\r\n          <Project>\r\n            <ProjectName>CMS</ProjectName>\r\n            <ProjectTask>Design</ProjectTask>\r\n            <TaskStatus status=\"pending\">Pending</TaskStatus>\r\n            <ProjectAction>\r\n              <IconButton>\r\n                <ArrowIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <ViewIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <RemoveIcon />\r\n              </IconButton>\r\n            </ProjectAction>\r\n          </Project>\r\n          <Project>\r\n            <ProjectName>Pingset</ProjectName>\r\n            <ProjectTask>Development</ProjectTask>\r\n            <TaskStatus status=\"active\">In Progress</TaskStatus>\r\n            <ProjectAction>\r\n              <IconButton active={true}>\r\n                <PauseIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <ViewIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <RemoveIcon />\r\n              </IconButton>\r\n            </ProjectAction>\r\n          </Project>\r\n          <Project>\r\n            <ProjectName>Pingset</ProjectName>\r\n            <ProjectTask>Testing</ProjectTask>\r\n            <TaskStatus status=\"pending\">Pending</TaskStatus>\r\n            <ProjectAction>\r\n              <IconButton>\r\n                <ArrowIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <ViewIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <RemoveIcon />\r\n              </IconButton>\r\n            </ProjectAction>\r\n          </Project>\r\n          <Project>\r\n            <ProjectName>Flip Corp.</ProjectName>\r\n            <ProjectTask>Design</ProjectTask>\r\n            <TaskStatus status=\"done\">Done</TaskStatus>\r\n            <ProjectAction>\r\n              <IconButton>\r\n                <ViewIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <RemoveIcon />\r\n              </IconButton>\r\n            </ProjectAction>\r\n          </Project>\r\n          <Project>\r\n            <ProjectName>CSR Bank</ProjectName>\r\n            <ProjectTask>Wireframing</ProjectTask>\r\n            <TaskStatus status=\"done\">Done</TaskStatus>\r\n            <ProjectAction>\r\n              <IconButton>\r\n                <ViewIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <RemoveIcon />\r\n              </IconButton>\r\n            </ProjectAction>\r\n          </Project>\r\n        </ProjectsList>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n})``;\r\n","import styled from \"styled-components\";\r\n\r\ninterface IGridProps {\r\n  columns: number;\r\n  rows: number;\r\n}\r\n\r\nexport const Grid = styled.div<IGridProps>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${p => p.columns}, 1fr);\r\n  grid-template-rows: repeat(${p => p.rows}, 1fr);\r\n  grid-gap: 30px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Card, CardHeader, CardBody } from \"./Card\";\r\nimport { Heading, Link } from \"./Typography\";\r\nimport { MessageIcon, IconButton } from \"./Icons\";\r\nimport { User, UserAvatar, UserName, UserEmail } from \"./User\";\r\n\r\nexport const Client = styled(User)`\r\n  grid-template-columns: 52px 1fr 19px;\r\n\r\n  ${IconButton} {\r\n    grid-row: 1 / span 2;\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\nexport const ClientsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 20px;\r\n`;\r\n\r\nexport const Clients = styled(({ ...props }) => {\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader>\r\n        <Heading size={3}>Clients(5)</Heading>\r\n        <Link>View All</Link>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ClientsList>\r\n          <Client>\r\n            <UserAvatar src=\"assets/images/avatars/avatar-1.png\" />\r\n            <UserName>Alex</UserName>\r\n            <UserEmail>alex@hotmail.com</UserEmail>\r\n            <IconButton>\r\n              <MessageIcon />\r\n            </IconButton>\r\n          </Client>\r\n          <Client>\r\n            <UserAvatar src=\"assets/images/avatars/avatar-2.png\" />\r\n            <UserName>Jessica</UserName>\r\n            <UserEmail>jessica@gmail.com</UserEmail>\r\n            <IconButton>\r\n              <MessageIcon />\r\n            </IconButton>\r\n          </Client>\r\n          <Client>\r\n            <UserAvatar src=\"assets/images/avatars/avatar-3.png\" />\r\n            <UserName>Willam</UserName>\r\n            <UserEmail>willam@yahoo.com</UserEmail>\r\n            <IconButton>\r\n              <MessageIcon />\r\n            </IconButton>\r\n          </Client>\r\n        </ClientsList>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n})``;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Card, CardHeader, CardBody } from \"./Card\";\r\nimport { Heading, Link, TextEllipsis } from \"./Typography\";\r\nimport { TaskStatus } from \"./TaskStatus\";\r\n\r\nexport const BidTitle = styled(TextEllipsis)`\r\n  font-weight: bold;\r\n  font-size: 13px;\r\n  line-height: 16px;\r\n  color: #2a2a2a;\r\n`;\r\n\r\nexport const BidStatus = styled(TaskStatus)`\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport const BidAction = styled(Link)`\r\n  font-weight: bold;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  text-align: right;\r\n`;\r\n\r\nexport const Bid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 10px;\r\n  align-content: center;\r\n`;\r\n\r\nexport const BidsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Bids = styled(({ ...props }) => (\r\n  <Card {...props}>\r\n    <CardHeader>\r\n      <Heading size={3}>Clients(5)</Heading>\r\n      <Link>View All</Link>\r\n    </CardHeader>\r\n    <CardBody>\r\n      <BidsList>\r\n        <Bid>\r\n          <BidTitle>Ink Corp.</BidTitle>\r\n          <BidStatus status=\"pending\">Pending</BidStatus>\r\n        </Bid>\r\n        <Bid>\r\n          <BidTitle>Jasper Tech</BidTitle>\r\n          <BidStatus status=\"pending\">Pending</BidStatus>\r\n        </Bid>\r\n        <Bid>\r\n          <BidTitle>Ink Corp.</BidTitle>\r\n          <BidAction>Move to Project</BidAction>\r\n        </Bid>\r\n        <Bid>\r\n          <BidTitle>Jasper Tech</BidTitle>\r\n          <BidAction>Move to Project</BidAction>\r\n        </Bid>\r\n      </BidsList>\r\n    </CardBody>\r\n  </Card>\r\n))``;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Card, CardHeader, CardBody } from \"./Card\";\r\nimport { Heading, TextEllipsis } from \"./Typography\";\r\nimport { ChevronIcon, IconButton, Icon } from \"./Icons\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport const InvoiceSwitchComponent = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 26px;\r\n`;\r\n\r\ninterface IInvoiceSwitchIconProps {\r\n  available?: boolean;\r\n}\r\n\r\nexport const InvoiceSwitchIcon = styled(IconButton)<IInvoiceSwitchIconProps>`\r\n  ${Icon} {\r\n    fill: ${p => (p.available ? \"#2a2a2a\" : \"#CCD8E2\")};\r\n  }\r\n\r\n  &:hover {\r\n    ${Icon} {\r\n      fill: ${p => (p.available ? \"#0187e0\" : \"#CCD8E2\")};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const InvoiceSwitchIconLeft = styled(InvoiceSwitchIcon)``;\r\n\r\nexport const InvoiceSwitchIconRight = styled(InvoiceSwitchIcon)`\r\n  ${Icon} {\r\n    transform: scale(-1, 1);\r\n  }\r\n`;\r\n\r\nexport const InvoiceSwitch = () => {\r\n  return (\r\n    <InvoiceSwitchComponent>\r\n      <InvoiceSwitchIconLeft>\r\n        <ChevronIcon />\r\n      </InvoiceSwitchIconLeft>\r\n      <InvoiceSwitchIconRight available={true}>\r\n        <ChevronIcon />\r\n      </InvoiceSwitchIconRight>\r\n    </InvoiceSwitchComponent>\r\n  );\r\n};\r\n\r\nexport const InvoiceTitle = styled(Heading)`\r\n  font-weight: 800;\r\n`;\r\n\r\nexport const InvoiceText = styled(TextEllipsis)`\r\n  font-weight: bold;\r\n  font-size: 13px;\r\n  line-height: 16px;\r\n`;\r\n\r\nexport const InvoiceRow = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 10px;\r\n  align-content: center;\r\n`;\r\n\r\nexport const InvoiceRowsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 12px;\r\n  margin: 25px 0 22px 0;\r\n`;\r\n\r\nexport const InvoiceButton = styled(Button)`\r\n  margin-top: auto;\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 0;\r\n    transform: translate(-50%, 10px);\r\n    width: 80%;\r\n    height: 40px;\r\n    background: rgba(237, 73, 73, 0.3);\r\n    filter: blur(7px);\r\n    border-radius: 6px;\r\n  }\r\n`;\r\n\r\nexport const Invoice = styled(({ ...props }) => (\r\n  <Card {...props}>\r\n    <CardHeader>\r\n      <Heading size={3}>Invoice(2)</Heading>\r\n      <InvoiceSwitch />\r\n    </CardHeader>\r\n    <CardBody>\r\n      <InvoiceTitle size={4}>Flip Corp.</InvoiceTitle>\r\n      <InvoiceRowsList>\r\n        <InvoiceRow>\r\n          <InvoiceText>Client</InvoiceText>\r\n          <InvoiceText>Edward Black</InvoiceText>\r\n        </InvoiceRow>\r\n        <InvoiceRow>\r\n          <InvoiceText>Task</InvoiceText>\r\n          <InvoiceText>Design</InvoiceText>\r\n        </InvoiceRow>\r\n        <InvoiceRow>\r\n          <InvoiceText>Working Time</InvoiceText>\r\n          <InvoiceText>2 days 3 hr</InvoiceText>\r\n        </InvoiceRow>\r\n      </InvoiceRowsList>\r\n      <InvoiceButton size=\"medium\" color=\"#ffffff\" backgroundColor=\"#ed4949\">\r\n        Create Invoice\r\n      </InvoiceButton>\r\n    </CardBody>\r\n  </Card>\r\n))``;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Card, CardHeader, CardBody } from \"./Card\";\r\nimport { Heading } from \"./Typography\";\r\nimport { Button } from \"./Button\";\r\n\r\nexport const CreateTaskBody = styled(CardBody)`\r\n  margin-bottom: 14px;\r\n  position: relative;\r\n  background: transparent;\r\n  padding: 15px 15px 20px 15px;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 15px;\r\n    z-index: 0;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    background: #dde4f4;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #0187e0;\r\n    box-shadow: 0px 14px 10px rgba(0, 0, 0, 0.03);\r\n    border-radius: 10px;\r\n  }\r\n\r\n  * {\r\n    z-index: 4;\r\n  }\r\n`;\r\n\r\nexport const CreateTaskTitle = styled(Heading)`\r\n  font-weight: bold;\r\n  font-size: 13px;\r\n  text-align: center;\r\n  line-height: 16px;\r\n  color: #ffffff;\r\n`;\r\n\r\nexport const CreateTaskImage = styled.img`\r\n  position: relative;\r\n  max-width: 100%;\r\n  margin-top: 10px;\r\n  z-index: 2;\r\n  margin-bottom: -30px;\r\n`;\r\n\r\nexport const CreateTaskButton = styled(Button)`\r\n  align-self: center;\r\n  margin-top: auto;\r\n`;\r\n\r\nexport const CreateTask = styled(({ ...props }) => (\r\n  <Card {...props}>\r\n    <CardHeader>\r\n      <Heading size={3}>Task</Heading>\r\n    </CardHeader>\r\n    <CreateTaskBody>\r\n      <CreateTaskTitle size={4}>You don’t have any task</CreateTaskTitle>\r\n      <CreateTaskImage src=\"assets/images/work-table.svg\" />\r\n      <CreateTaskButton size=\"small\" backgroundColor=\"#FFFFFF\" color=\"#2A2A2A\">\r\n        Create New Task\r\n      </CreateTaskButton>\r\n    </CreateTaskBody>\r\n  </Card>\r\n))``;\r\n","import React from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport { AppContainer, AppContent } from \"./AppContainer\";\r\nimport { Header } from \"./Header\";\r\nimport { Search } from \"./Search\";\r\nimport { Projects } from \"./Projects\";\r\nimport { Grid } from \"./Grid\";\r\nimport { Clients } from \"./Clients\";\r\nimport { Bids } from \"./Bids\";\r\nimport { Invoice } from \"./Invoice\";\r\nimport { CreateTask } from \"./CreateTask\";\r\nimport { TopNav } from \"./TopNav\";\r\nimport { Profile } from \"./Profile\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: \"Muli\", sans-serif;\r\n    color: #2A2A2A;\r\n    background-color: #0970d5;\r\n    background-image: url(assets/images/background.svg);\r\n    background-position: center top;\r\n    background-size: cover;\r\n  }\r\n\r\n  body * {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  img, svg {\r\n    vertical-align: middle;\r\n  }\r\n`;\r\n\r\nconst AppComponent = styled.div`\r\n  position: relative;\r\n  min-height: 100vh;\r\n  overflow: auto;\r\n`;\r\n\r\nconst ContentGrid = styled(Grid)`\r\n  @media (max-width: 1199px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: auto;\r\n  }\r\n`;\r\n\r\nconst AdditionalGrid = styled(Grid)`\r\n  @media (max-width: 900px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: auto;\r\n  }\r\n`;\r\n\r\nexport const App = () => {\r\n  return (\r\n    <AppComponent>\r\n      <GlobalStyle />\r\n      <AppContainer>\r\n        <Header>\r\n          <TopNav />\r\n          <Profile />\r\n        </Header>\r\n        <AppContent>\r\n          <Search />\r\n          <ContentGrid columns={2} rows={1}>\r\n            <Projects />\r\n            <AdditionalGrid columns={2} rows={2}>\r\n              <Clients />\r\n              <CreateTask />\r\n              <Bids />\r\n              <Invoice />\r\n            </AdditionalGrid>\r\n          </ContentGrid>\r\n        </AppContent>\r\n      </AppContainer>\r\n    </AppComponent>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}